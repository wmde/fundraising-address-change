<?php

declare( strict_types=1 );

namespace WMDE\Fundraising\AddressChangeContext\DataAccess\Migrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * This migration is a followup for commit 82fbafd0df529ba9604b35ef805174d1a4c390fa
 * where we changed how we store the address change identifiers and made the columns non-nullable,
 * but forgot to migrate old address change entries where the `previous_identifier` defaulted to NULL.
 */
final class Version20241113164504 extends AbstractMigration {
	public function getDescription(): string {
		return 'Make address change identifiers non-nullable';
	}

	public function up( Schema $schema ): void {
		$this->addSql( "UPDATE address_change SET previous_identifier=current_identifier WHERE previous_identifier IS NULL AND current_identifier IS NOT NULL" );
		// We can't use $schema here to modify the columns because `addSQL` appends to the SQL generated by $schema calls.
		// We would fail the migration when trying to set a column to non-nullable if it already contains NULL values
		$this->addSql( "ALTER TABLE address_change MODIFY current_identifier VARCHAR(36) NOT NULL, MODIFY previous_identifier VARCHAR(36) NOT NULL " );
	}

	public function down( Schema $schema ): void {
		$addressChange = $schema->getTable( 'address_change' );
		$addressChange->modifyColumn( 'current_identifier', [ 'notnull' => false ] );
		$addressChange->modifyColumn( 'previous_identifier', [ 'notnull' => false ] );
	}
}
